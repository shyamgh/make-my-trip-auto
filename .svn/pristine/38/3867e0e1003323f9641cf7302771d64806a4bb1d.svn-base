package tests;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.testng.annotations.Test;

import com.logger.MyLogger;


public class UseLogger {
	  // use the classname for the logger, this way you can refactor
	  //private final static Logger LOGGER = Logger.getLogger(UseLogger.class.getName());
	  private final static Logger LOGGER = MyLogger.LOGGER;
	
	  public void doSomeThingAndLog() {
	    // ... more code
	    // now we demo the logging
	    // set the LogLevel to Severe, only severe Messages will be written
	    LOGGER.setLevel(Level.ALL);

	    LOGGER.entering(this.getClass().getName(), "doSomeThingAndLog");
	    LOGGER.severe("STEP 1 :: Info Log");
	    LOGGER.warning("STEP 2 :: Info Log");
	    LOGGER.info("STEP 3 :: Info Log");
	    LOGGER.finest("STEP 4 :: Really not important");
	
	    // set the LogLevel to Info, severe, warning and info will be written
	    // finest is still not written
	    LOGGER.severe("STEP 5 :: Info Log");
	    LOGGER.warning("STEP 6 :: Info Log");
	    LOGGER.info("STEP 7 :: Info Log");
	    LOGGER.finest("STEP 8 :: Really not important");
	    LOGGER.exiting(this.getClass().getName(), "doSomeThingAndLog");	 
	  }
	
	
	  @Test
	  public void test1() {
	  //public static void main(String[] args) {
	    UseLogger tester = new UseLogger();
	    try {
	      MyLogger.setup();
	    } catch (IOException e) {
	      e.printStackTrace();
	      throw new RuntimeException("Problems with creating the log files");
	    }
	    tester.doSomeThingAndLog();
	  }

}
 